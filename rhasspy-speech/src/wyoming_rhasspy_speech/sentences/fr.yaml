language: fr
lists:
  color:
    values:
      - "blanc"
      - "blanche"
      - "noir"
      - "noire"
      - "rouge"
      - "orange"
      - "jaune"
      - "vert"
      - "verte"
      - "bleu"
      - "bleue"
      - "violet"
      - "violettte"
      - "marron"
      - "rose"
  brightness:
    range:
      type: "percentage"
      from: 10
      to: 100
      step: 10
  seconds:
    range:
      from: 10
      to: 60
  minutes:
    range:
      from: 1
      to: 60
  hours:
    range:
      from: 1
      to: 24
  cover_classes:
    values:
      - store
      - stores
      - rideau
      - rideaux
      - portes de garage
      - portess de garages
      - fenêtre
      - fenêtres
      - volet
      - volets
      - portail
      - portails

expansion_rules:
  le: (le |la |les |l')
  dans: "(dans|du|de|des|à|au|aux|sur)"
  de: "(du|de|des)"
  tous: "(tout|tous|toute[s])"

  # Verbs
  active: "(active|activer|démarre|démarrer|<allume>)"
  allume: "(allume|allumer)"
  augmente: "(augmente|augmenter|monte|monter)"
  diminue: "(diminue|diminuer|baisse|baisser)"
  eteins: "(éteint|éteindre|désactive|désactiver|stoppe|stopper|arrête|arrêter|coupe|couper)"
  ferme: "(ferme|fermer|<baisse>)"
  mets: "(mets|mettre|passe|passer)"
  ouvre: "(ouvre|ouvrir)"
  regle: "(règle|régler|mets|mettre|ajuste|ajuster|change|changer)"
  supprime: "(supprime|supprimer)"
  verrouille: "(verrouiller|verrouille)"
  deverrouille: "(déverrouiller|déverrouille)"
  monte: (monte|monter)
  baisse: (baisse|baisser|descendre|descends)

  # Domains and Things
  lumiere: "(lumière[s])"
  media: "(chanson|élément|film|vidéo|épisode|radio|média)"
  serrure: "(verrou[s]|serrure[s]|porte[s])"

intents:
  # nevermind
  HassNevermind:
    data:
      - sentences:
          - "oublie[s]"
          - "annule[r]"
          - "chut"
          - "tais toi"
          - "silence"

  # date, time, weather
  HassGetCurrentTime:
    data:
      - sentences:
          - "quelle heure est-il"

  HassGetCurrentDate:
    data:
      - sentences:
          - "quel jour sommes-nous"
  
  HassGetWeather:
    data:
      - sentences:
          - "quel temps fait-il"

      - sentences:
          - "quel temps fait-il à [<le>]{name}"
        requires_context:
          domain: weather

  # HassTurnOn (Generic):
  HassTurnOn:
    data:
      - sentences:
          - "<active> [<le>]{name}"
          - "<active> [<le>]{name} <dans> [<le>]{area}"
        requires_context:
          domain:
            - light
            - fan
            - switch
            - input_boleean
            - media_player
            
      # HassTurnOn (Light):
      # area
      - sentences:
          - "<allume> [toutes] les lumières [<dans>] [<le>]{area}"
          - "<allume> [<le>]{area}"
        slots:
          domain: light

      # area + context awareness
      - sentences:
          - "<allume> la lumière"
          - "<allume> les lumières"
          
        slots:
          domain: light

      # all
      - sentences:
          - "<allume> toutes les lumières"
        slots:
          domain: light

      # floor
      - sentences:
          - "<allume> [toutes] les lumières [<dans>] [<le>]{floor}"
          - "<allume> [<le>]{floor}"
        slots:
          domain: light

      # HassTurnOn (Cover):
      # name
      - sentences:
          - "<ouvre> [<le>]{name}"
        requires_context:
          domain: cover

      # device_class and area
      - sentences:
          - "<ouvre> [<tous>] [<le>]{cover_classes} [<dans>] [<le>]{area}"
        slots:
          domain: cover

      # device_class
      - sentences:
          - "<ouvre> <tous> [<le>]{cover_classes}"
        slots:
          domain: cover

      # Context area awareness
      - sentences:
          - "<ouvre> [<le>]{cover_classes}"
        slots:
          domain: cover

      # device_class and floor
      - sentences:
          - "<ouvre> [<tous>] [<le>]{cover_classes} [<dans>] [<le>]{floor}"
        slots:
          domain: cover

      # HassTurnOn (Locks):
      # name
      - sentences:
          - "<verrouille> [<le>]{name}"
        requires_context:
          domain: lock

      # area
      - sentences:
          - "<verrouille> [<le>]{area}"
          - "<verrouille> [<tous>] [<le>] <serrure> [<dans>] [<le>]{area}"
        slots:
          domain: lock

      # context area awareness
      - sentences:
          - "<verrouille> [<le>] <serrure>"
        slots:
          domain: lock

      # floor
      - sentences:
          - "<verrouille> [<le>]{floor}"
          - "<verrouille> [<tous>] [<le>] <serrure> [<dans>] [<le>]{floor}"
        slots:
          domain: lock

      # the whole house
      - sentences:
          - "<verrouille> <tous> [<le>] <serrure>"
        slots:
          domain: lock

  # HassTurnOff (Generic)
  HassTurnOff:
    data:
      - sentences:
          - "<eteins> [<le>]{name}"
          - "<eteins> [<le>]{name} <dans> [<le>]{area}"
        requires_context:
          domain:
            - light
            - fan
            - switch
            - input_boleean
            - media_player

      # HassTurnOff (Light)
      # area
      - sentences:
          - "<eteins> [toutes] les lumières [<dans>] [<le>]{area}"
          - "<eteins> [<le>]{area}"
        slots:
          domain: light

      # area + context awareness
      - sentences:
          - "<eteins> [<le>]<lumiere>"
        slots:
          domain: light

      # all
      - sentences:
          - "<eteins> <tous> [<le>]<lumiere>"
        slots:
          domain: light

      # floor
      - sentences:
          - "<eteins> [toutes] les lumières [<dans>] [<le>]{floor}"
          - "<eteins> [<le>]{floor}"
        slots:
          domain: light


      # HassTurnOff (Cover)
      # name
      - sentences:
          - "<ferme> [<le>]{name}"
        requires_context:
          domain: cover

      # device_class and area
      - sentences:
          - "<ferme> [<tous>] [<le>]{cover_classes} [<dans>] [<le>]{area}"
        slots:
          domain: cover

      # device_class
      - sentences:
          - "<ferme> <tous> [<le>]{cover_classes}"
        slots:
          domain: cover

      # Context area awareness
      - sentences:
          - "<ferme> [<le>]{cover_classes}"
        slots:
          domain: cover

      # device_class and floor
      - sentences:
          - "<ferme> [<tous>] [<le>]{cover_classes} [<dans>] [<le>]{floor}"
        slots:
          domain: cover

      # HassTurnOff (Lock)
      # name
      - sentences:
          - "<deverrouille> [<le>]{name}"
        requires_context:
          domain: lock

      # area
      - sentences:
          - "<deverrouille> [<le>]{area}"
          - "<deverrouille> [<tous>] [<le>] <serrure> [<dans>] [<le>]{area}"
        slots:
          domain: lock

      # context area awareness
      - sentences:
          - "<deverrouille> [<le>] <serrure>"
        slots:
          domain: lock

      # floor
      - sentences:
          - "<deverrouille> [<le>]{floor}"
          - "<deverrouille> [<tous>] [<le>] <serrure> [<dans>] [<le>]{floor}"
        slots:
          domain: lock

      # the whole house
      - sentences:
          - "<deverrouille> <tous> [<le>] <serrure>"
        slots:
          domain: lock
      

  # HassLightSet
  HassLightSet:
    data:
      # brightness (name)
      - sentences:
          - "(<regle>|<augmente>|<diminue>) la luminosité [<de>] [<le>]{name} à {brightness} pourcent"
          - "(<allume>|<regle>|<augmente>|<diminue>) [<le>]{name} à {brightness} pourcent"
        requires_context:
          domain: light

      # brightness (area)
      - sentences:
          - "(<regle>|<augmente>|<diminue>) la luminosité [<dans>] [<le>]{area} à {brightness} pourcent"
          - "(<allume>|<regle>|<augmente>|<diminue>) [<le>]{area} à {brightness} pourcent"

      # brigtness (area + context awareness)
      - sentences:
          - "(<regle>|<augmente>|<diminue>) la luminosité à {brightness} pourcent"

      # brightness (floor)
      - sentences:
          - "(<regle>|<augmente>|<diminue>) la luminosité [<dans>] [<le>]{floor} à {brightness} pourcent"
          - "(<allume>|<regle>|<augmente>|<diminue>) [<le>]{floor} à {brightness} pourcent"

      # color (name)
      - sentences:
          - "(<regle>|<allume>) [<le>]{name} en {color}"
        requires_context:
          domain: light

      # color (area)
      - sentences:
          - "(<regle>|<allume>) [<le>]{area} en {color}"

      # color (area + context awareness)
      - sentences:
          - "<regle> la couleur [en] {color}"
          - "(<regle>|<allume>) les lumières en {color}"

      # color (floor)
      - sentences:
          - "(<regle>|<allume>) [<le>]{floor} en {color}"

  # HassStartTimer
  HassStartTimer:
    data:
      # seconds
      - sentences:
          - "minuteur {seconds} secondes"
      
      # minutes
      - sentences:
          - "minuteur {minutes} minutes"

      # hours + minutes
      - sentences:
          - "minuteur {hours} heures et {minutes} minutes"

  # HassCancelTimer:
  HassCancelTimer:
    data:
      # No name
      - sentences:
          - "<supprime> [le] minuteur"

  # HassCancelAllTimers:
  HassCancelAllTimers:
    data:
      # All timers
      - sentences:
          - "<supprime> tous (les|mes) minuteurs"

  # HassTimerStatus:
  HassTimerStatus:
    data:
      # No name
      - sentences:
          - "combien de temps reste-t-il"
          - "combien de temps reste-t-il (sur|dans) (le|mon) minuteur"

  # HassMediaPause:
  HassMediaPause:
    data:
      # name
      - sentences:
          - "<mets> [<le>]{name} (sur|en) pause"
        requires_context:
          domain: media_player

      # Area (Context awarenes)
      - sentences:
          - "pause"

      # Area
      - sentences:
          - "<mets> [<le>]<media> (sur|en) pause <dans> [<le>]{area}"

  # HassMediaNext:
  HassMediaNext:
    data:
      # name
      - sentences:
          - "<media> suivant[e] sur [<le>]{name}"
        requires_context:
          domain: media_player

      # Area (Context awarenes)
      - sentences:
          - "suivant[e]"

      # Area
      - sentences:
          - "<media> suivant[e] <dans> [<le>]{area}"

  # HassGetTemperature:
  HassClimateGetTemperature:
    data:
      # area
      - sentences:
          - "combien fait-il <dans> [<le>]{area}"

      # context awerness
      - sentences:
          - "combien fait-il"

  # HassGetState
  HassGetState:
    data:
      - sentences:
          - "quel est [(l'état|le statut|la valeur) de] [<le>]{name} [<dans> [<le>]{area}]"
        requires_context:
          domain:
            - sensor
            - binary_sensor
