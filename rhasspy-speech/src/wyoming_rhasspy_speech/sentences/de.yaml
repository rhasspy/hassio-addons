language: de
lists:
  color:
    values:
      - in: "wei(ß|ss)"
        out: "white"
      - in: "schwarz"
        out: "black"
      - in: "rot"
        out: "red"
      - in: "orange"
        out: "orange"
      - in: "gelb"
        out: "yellow"
      - in: "grün"
        out: "green"
      - in: "blau"
        out: "blue"
      - in: "violett"
        out: "purple"
      - in: "braun"
        out: "brown"
  brightness:
    range:
      type: "percentage"
      from: 10
      to: 100
      step: 10
  seconds:
    range:
      from: 10
      to: 100
      step: 10
  minutes_small:
    range:
      from: 2
      to: 9
  minutes_large:
    range:
      from: 10
      to: 100
      step: 10
  minutes_extra:
    values:
      - in: fünfzehn
        out: 15
      - in: fünfundvierzig
        out: 45
  minutes_half:
    values:
      - in: einhalb
        out: 30
  hours_half:
    values:
      - in: einhalb
        out: 30
  hours_special:
    values:
      - in: viertel
        out: 15
      - in: halbe
        out: 30
      - in: dreiviertel
        out: 45
  hours:
    range:
      from: 1
      to: 100
  cover_classes:
    values:
      - in: Markise[n]
        out: awning
      - in: "(Jalousie[n]|Rollo[s]|Beschattung[en])"
        out: blind
      - in: "(Gardine[n]|Vorhang|Vorhänge)"
        out: curtain
      - in: Tür[e|en]
        out: door
      - in: "(Garagentür[e|en]|Garagentor[e])"
        out: garage
      - in: Tor[e]
        out: gate
      - in: Schirm[e]
        out: shade
      - in: "(Roll[l](a|ä)den|Rollo[s]|Beschattung[en])"
        out: shutter
      - in: Fenster
        out: window

expansion_rules:
  name: "[der|die|das|dem|den|des] {name}"
  area: "[im|in der|in de[n|m]] {area}"
  floor: "[im|in de[n|m]] {floor}"
  area_floor: "<area>|<floor>"
  alle: "die|alle|sämtliche"
  alle_lichter: "das Licht|<alle> Lichter"
  schalte: "(mach|schalt)[e]"
  brightness: "{brightness} Prozent"
  # Timers
  timer_set: "starte|setze|stelle|erstelle"
  timer_cancel: "beende|stoppe"
  # Media Players
  naechster: "nächste[r|s|n]"
  starte: (starte|spiele)
  song: "(Titel|Lied|Song|Track|Stück)"

intents:
  # nevermind
  HassNevermind:
    data:
      - sentences:
          - "vergiss es"
          - "egal"
          - "abbrechen"
          - "Abbruch"
          - "[doch ](nicht[s]|nix)"

  # date, time, weather
  HassGetCurrentTime:
    data:
      - sentences:
          - "wie spät ist es"
          - "(wie viel|wieviel) uhr (ist es|haben wir[ es])[ jetzt]"

  HassGetCurrentDate:
    data:
      - sentences:
          - "(welchen tag|welches datum) haben wir heute"
          - "(welcher tag|welches datum) ist heute"

  HassGetWeather:
    data:
      - sentences:
          - "wie ist das Wetter"
      - sentences:
          - "wie ist das Wetter (für|in) <name>"
          - "wie ist das <name>[er|s] Wetter"
          - "was für[ ein] Wetter (ist|hat es) in <name>"
        requires_context:
          domain: weather

  # turn on/off
  # open/close
  # lock/unlock
  HassTurnOn:
    data:
      # turn on all lights
      - sentences:
          - "<schalte> <alle_lichter> an"

      # turn on named light or switch
      # named light or switch in area and
      # named light or switch on floor
      - sentences:
          - "<schalte> <name> an"
          - "<schalte> <name> <area_floor> an"
          - "<schalte> <area_floor> <name> an"
        requires_context:
          domain:
            - light
            - switch

      # turn on all lights in area or on floor
      - sentences:
          - "<schalte> <alle_lichter> <area_floor> an"
          - "<schalte> <area_floor> <alle_lichter> an"

      # open named cover or valve
      # named cover or valve in area and
      # named cover or valve on floor
      - sentences:
          - "öffne <name>"
          - "mach[e] <name> auf"
          - "öffne <name> <area_floor>"
          - "öffne <area_floor> <name>"
          - "mach[e] <name> <area_floor> auf"
          - "mach[e] <area_floor> <name> auf"
        requires_context:
          domain:
            - cover
            - valve

      # open all covers in area or on floor
      - sentences:
          - "öffne <alle> {cover_classes:device_class} <area_floor>"
          - "öffne <area_floor> <alle> {cover_classes:device_class}"
          - "mach[e] <alle> {cover_classes:device_class} <area_floor> auf"
          - "mach[e] <area_floor> <alle> {cover_classes:device_class} auf"

      # lock
      - sentences:
          - "(schließ|sperr)[e] <name> ab"
        requires_context:
          domain: lock

      # script
      - sentences:
          - "führe <name> aus"
          - "starte <name>"
        requires_context:
          domain: script

      # scene
      - sentences:
          - "aktiviere <name>"
        requires_context:
          domain: scene

  HassTurnOff:
    data:
      # turn off all lights
      - sentences:
          - "<schalte> <alle_lichter> aus"

      # turn off named light or switch
      # named light or switch in area and
      # named light or switch on floor
      - sentences:
          - "<schalte> <name> aus"
          - "<schalte> <name> <area_floor> aus"
          - "<schalte> <area_floor> <name> aus"
        requires_context:
          domain:
            - light
            - switch

      # turn off all lights in area or on floor
      - sentences:
          - "<schalte> <alle_lichter> <area_floor> aus"
          - "<schalte> <area_floor> <alle_lichter> aus"

      # close named cover or valve
      # named cover or valve in area and
      # named cover or valve on floor
      - sentences:
          - "schließ[e] <name>"
          - "mach[e] <name> zu"
          - "schließ[e] <name> <area_floor>"
          - "schließ[e] <area_floor> <name>"
          - "mach[e] <name> <area_floor> zu"
          - "mach[e] <area_floor> <name> zu"
        requires_context:
          domain:
            - cover
            - valve

      # close all covers in area or on floor
      - sentences:
          - "schließ[e] <alle> {cover_classes:device_class} <area_floor>"
          - "schließ[e] <area_floor> <alle> {cover_classes:device_class}"
          - "mach[e] <alle> {cover_classes:device_class} <area_floor> zu"
          - "mach[e] <area_floor> <alle> {cover_classes:device_class} zu"

      # unlock
      - sentences:
          - "entsperr[e] <name>"
          - "schließ[e] <name> auf"
        requires_context:
          domain: lock

  # light brightness/color
  HassLightSet:
    data:
      # brightness
      - sentences:
          - "setze [die ]Helligkeit[ von] <name> auf <brightness>"
          - "stelle [die ]Helligkeit[ von] <name> auf <brightness>[ ein]"
          - "setze[ von] <name> [die ]Helligkeit auf <brightness>"
          - "stelle[ von] <name> [die ]Helligkeit auf <brightness>[ ein]"
        requires_context:
          domain: light

      - sentences:
          - "setze [die ]Helligkeit <area_floor> auf <brightness>"
          - "stelle [die ]Helligkeit <area_floor> auf <brightness>[ ein]"
          - "setze <area_floor> [die ]Helligkeit auf <brightness>"
          - "stelle <area_floor> [die ]Helligkeit auf <brightness>[ ein]"

      # color
      - sentences:
          - "setze [die ]Farbe[ von] <name> auf {color}"
          - "setze[ von] <name> [die ]Farbe auf {color}"
          - "stelle [die ]Farbe[ von] <name> auf {color}[ ein]"
          - "stelle[ von] <name> [die ]Farbe auf {color}[ ein]"
        requires_context:
          domain: light

      - sentences:
          - "setze [die ]Farbe <area_floor> (der|aller) Lichter auf {color}"
          - "setze [die ]Farbe (der|aller) Lichter <area_floor> auf {color}"
          - "setze <area_floor> [die ]Farbe (der|aller) Lichter auf {color}"
          - "stelle [die ]Farbe <area_floor> (der|aller) Lichter auf {color}[ ein]"
          - "stelle [die ]Farbe (der|aller) Lichter <area_floor> auf {color}[ ein]"
          - "stelle <area_floor> [die ]Farbe (der|aller) Lichter auf {color}[ ein]"

  # timers
  HassStartTimer:
    data:
      # seconds
      - sentences:
          - "<timer_set> [einen] Timer (auf|für) {seconds} Sekunden"

      # minutes
      - sentences:
          - "<timer_set> [einen] Timer (auf|für) eine Minute"
          - "<timer_set> [einen] Timer (auf|für) {minutes_small} Minuten"
          - "<timer_set> [einen] Timer (auf|für) {minutes_large} Minuten"
          - "<timer_set> [einen] Timer (auf|für) {minutes_extra} Minuten"

      # # minutes half
      # - sentences:
      #     - "<timer_set> [einen] Timer (auf|für) ein{minutes_half:seconds} Minuten"
      #     - "<timer_set> [einen] Timer (auf|für) {minutes_small}{minutes_half:seconds} Minuten"
      #     - "<timer_set> [einen] Timer (auf|für) {minutes_large}{minutes_half:seconds} Minuten"
      #     - "<timer_set> [einen] Timer (auf|für) {minutes_extra}{minutes_half:seconds} Minuten"

      # hours
      - sentences:
          - "<timer_set> [einen] Timer (auf|für) eine Stunde"
          - "<timer_set> [einen] Timer (auf|für) {hours} Stunden"
          - "<timer_set> [einen] Timer (auf|für) eine {hours_special:minutes} Stunde"

      # # hours half
      # - sentences:
      #     - "<timer_set> [einen] Timer (auf|für) einein{hours_half:minutes} Stunden"
      #     - "<timer_set> [einen] Timer (auf|für) {hours}{hours_half:minutes} Stunden"

      # hours + minutes
      - sentences:
          - "<timer_set> [einen] Timer (auf|für) eine Stunde und eine Minute"
          - "<timer_set> [einen] Timer (auf|für) {hours} Stunden und {minutes_small} Minuten"
          - "<timer_set> [einen] Timer (auf|für) {hours} Stunden und {minutes_large} Minuten"
          - "<timer_set> [einen] Timer (auf|für) {hours} Stunden und {minutes_extra} Minuten"

  HassCancelTimer:
    data:
      - sentences:
          - "<timer_cancel>[ (den|meinen)] Timer"

  HassCancelAllTimers:
    data:
      - sentences:
          - "<timer_cancel> (alle[ meine]|sämtliche) Timer"

  HassPauseTimer:
    data:
      - sentences:
          - "pausiere[ (den|meinen)] Timer"
          - "halte[ (den|meinen)] Timer an"

  HassUnpauseTimer:
    data:
      - sentences:
          - "setze[ (den|meinen)] Timer fort"

  HassTimerStatus:
    data:
      - sentences:
          - "Timer Status"
          - "Status (des|meines) Timers"
          - "wie lange läuft (der|mein) Timer noch"

  # media players
  HassMediaPause:
    data:
      - sentences:
          - "[[die ]Musik ](pausieren|pause|anhalten|stopp[en]|halt)"
          - "(pausiere|stoppe)[ die] Musik"
          - "halt[e][ die] Musik an"

      - sentences:
          - "(pausiere|pause|stopp[e]) <name>"
          - "halte <name> an"
          - "<name> (pausieren|pause|anhalten|stopp|halt)"
        requires_context:
          domain: media_player

  HassMediaUnpause:
    data:
      - sentences:
          - "fortsetzen|weiter[ (machen|laufen lassen)]"

      - sentences:
          - "<name> fortsetzen|weiter[ (machen|laufen lassen)]"
        requires_context:
          domain: media_player

  HassMediaNext:
    data:
      - sentences:
          - "[<starte> ]nächsten (Titel|Song|Track)"
          - "[<starte> ]nächstes (Lied|Stück)"
          - "nächster (Titel|Song|Track)"

      - sentences:
          - "[<starte> ]nächsten (Titel|Song|Track)[ (an|am|auf)] <name>"
          - "[<starte> ]nächstes (Lied|Stück)[ (an|am|auf)] <name>"
          - "nächster (Titel|Song|Track)[ (an|am|auf)] <name>"
        requires_context:
          domain: media_player

  # temperature
  HassGetTemperature:
    data:
      - sentences:
          - "wie[ (hoch|niedrig)] ist die Temperatur[ <area_floor>]"
          - "wie[ (hoch|niedrig)] ist <area_floor> die Temperatur"
          - "wie[ (hoch|niedrig)] ist die Temperatur (von dem|vom) Thermostat <area_floor>"
          - "wie[ (hoch|niedrig)] ist die Temperatur des Thermostat[s] <area_floor>"
          - "wie (warm|kalt) ist es <area_floor>"
          - "(wieviel|wie viel) Grad[ (hat|sind)] es <area_floor>"

      - sentences:
          - "Wie[ (hoch|niedrig)] ist die Temperatur[ (von dem|vom)] <name>"
          - "Wie[ (hoch|niedrig)] ist die Temperatur des <name>[s]"
        requires_context:
          domain: climate

  # questions
  HassGetState:
    data:
      # doors, etc.
      - sentences:
          - "ist <name> {cover_states:state}"
        requires_context:
          domain:
            - cover
            - valve
        lists:
          cover_states:
            values:
              - in: "(offen|auf|oben|geöffnet)"
                out: open
              - in: "(geschlossen|zu|unten)"
                out: closed

      # locks
      - sentences:
          - "ist <name> {lock_states:state}"
        requires_context:
          domain: lock
        lists:
          lock_states:
            values:
              - in: "(([ab|zu]ge|ver)(schlossen|sperrt)|verriegelt)"
                out: locked
              - in: "(nicht (([ab|zu]ge|ver)(schlossen|sperrt)|verriegelt)|ent(riegelt|sperrt)|aufge(sperrt|schlossen))"
                out: unlocked

      # sensors, etc.
      - sentences:
          - "(wie|was) ist [der (Zustand|Wert) von] <name>"
        requires_context:
          domain:
            - sensor
            - binary_sensor

  # todo
  HassListAddItem:
    data:
      - sentences:
          - "füge {todo_item}[ zu][ (meiner|der)] ({name}[ Liste]|[Liste ]{name}) hinzu"
          - "füge[ zu][ (meiner|der)] ({name}[ Liste]|[Liste ]{name}) {todo_item} hinzu"
          - "[setz[e] ]{todo_item} auf [meine|die] ({name}[ Liste]|[Liste ]{name})"
        requires_context:
          domain: todo
